@using Microsoft.AspNetCore.Components.Web
@using first_website_.Models
@using first_website_.Services
@inject JsonFileProductService ProductService


<div class="card-columns">
    @foreach (var product in ProductService.GetProducts())
    {
        <div class="card">
            <div class="card-img" style="background-image:url('@product.Image'); "></div>
            <div class="card-body">
                <h5 class="card-title">
                    @product.Title
                </h5>
            </div>
            <div class="card-footer">
                <small class="text-muted">
                    <button @onclick="(e => SelectProduct(product.Id))"
                            data-toggle="modal" data-target="#productModal" class="btn btn-primary">
                        More Info
                    </button>
                </small>
            </div>
        </div>

    }
</div>

<link rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">


@if (selectedProduct !=null)
{
    
    <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedProduct.Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedProduct.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@selectedProduct.Description</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (voteCount == 0)
                    {
                        <span> Be the first to vote!</span>

                    }
                    else
                    {
                        <span>@voteCount @voteLabel</span>
                    }
                    @for (int i = 0; i < 5; i++)
                    {
                        var currentStar = i;
                        if (currentStar < curentRating)
                        {
                            <span class="fa-star fa checked" @onclick="(e => SubmitRating(currentStar+1))"></span>
                        }
                        else
                        {
                            <span class="fa-star fa " @onclick="(e => SubmitRating(currentStar+1))"></span>

                        }
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    Product selectedProduct = null;
    string selectedProductId;

    void SelectProduct(string id)
    {
        selectedProductId = id;
        selectedProduct = ProductService.GetProducts().First(x => x.Id == selectedProductId);

        Console.WriteLine("clicked "+selectedProduct.ToString());
        GetCurrentRating();

    }




    float curentRating = 0;
    int voteCount = 0;
    string voteLabel = "";

    void GetCurrentRating()
    {
        if (selectedProduct.Ratings == null)
        {
            curentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedProduct.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";

            curentRating = (float)selectedProduct.Ratings.Sum() / voteCount;
            voteLabel = voteLabel + " (" + curentRating.ToString("0.0") + ")";

        }
        Console.WriteLine($"Current rating  for {selectedProduct.Id} : {curentRating}");
    }

    void SubmitRating(int rating)
    {
        Console.WriteLine($"Rating recived  for {selectedProduct.Id} : {rating}");
        ProductService.AddRating(selectedProductId, rating);
        SelectProduct(selectedProductId);
        GetCurrentRating();
    }

}
